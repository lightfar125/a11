yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm
yum install -y wget nano unzip openssl mariadb mariadb-server nginx

systemctl enable mariadb --now
mysql_secure_installation
mysql -u root -p
CREATE DATABASE thrninja;
GRANT ALL ON thrninja.* to 'ninja'@'localhost' identified by 'stargate';
FLUSH PRIVILEGES;
exit;

yum install php71 php71-php-fpm php71-php-gd php71-php-curl php71-php-mcrypt php71-php-cli php71-php-gmp php71-php-mbstring php71-php-zip php71-php-xml php71-php-pdo php71-php-memcached php71-php-mysqli -y

ln -s /usr/bin/php71 /usr/bin/php
useradd ninja
vi /etc/opt/remi/php71/php-fpm.d/ninja.conf
[ninja]
user = ninja
group = ninja
listen = /var/run/php71-fpm-ninja.sock
listen.owner = ninja
listen.group = ninja
listen.mode = 0666
pm = ondemand
pm.max_children = 5
pm.process_idle_timeout = 10s;
pm.max_requests = 200
chdir = /

mkdir -p /etc/nginx/ssl && cd /etc/nginx/ssl
openssl genrsa -des3 -passout pass:x -out ininja.pass.key 2048
openssl rsa -passin pass:x -in ininja.pass.key -out ininja.key
rm ininja.pass.key
openssl req -new -key ininja.key -out ininja.csr
openssl x509 -req -days 365 -in ininja.csr -signkey ininja.key -out ininja.crt

vi /etc/nginx/conf.d/thrninja.conf


server {
    listen      443 default;
    server_name 192.168.81.132;

    ssl on;
    ssl_certificate     /etc/nginx/ssl/ininja.crt;
    ssl_certificate_key /etc/nginx/ssl/ininja.key;
    ssl_session_timeout 5m;

    ssl_ciphers               'AES128+EECDH:AES128+EDH:!aNULL';
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    root /var/www/ninja/public;

    index index.html index.htm index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log  /var/log/nginx/ininja.access.log;
    error_log   /var/log/nginx/ininja.error.log;

    sendfile off;

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php71-fpm-ninja.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
    }

    location ~ /\.ht {
        deny all;
    }
}

server {
    listen      80;
    server_name 192.168.81.132;

    add_header Strict-Transport-Security max-age=2592000;
    rewrite ^ https://$server_name$request_uri? permanent;
}

cd /opt
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/bin/composer
cd /opt
wget https://download.invoiceninja.com/ninja-v3.0.5.zip
mkdir -p /var/www
unzip -d /var/www ninja-v3.0.5.zip
cd /var/www/ninja
composer install --no-dev -o
cp -v .env.example .env
vi .env
vi config/database.php
'mysql' => [
            'driver'    => 'mysql',
            'host'      => env('DB_HOST', 'localhost'),
            'database'  => env('DB_DATABASE', 'thrninja'),
            'username'  => env('DB_USERNAME', 'ninja'),
            'password'  => env('DB_PASSWORD', 'YourStrongPassword'),
            'charset'   => 'utf8',
            'collation' => 'utf8_unicode_ci',
            'prefix'    => '',
            'strict'    => env('DB_STRICT', false),
],
php artisan migrate
php artisan db:seed
php artisan key:generate
base64:32qzLp4wUU+s7eIAIdA81eUtVYrBRMm6M2Qze2EdfoY=]
chown -Rfv ninja:ninja /var/www/ninja
setenforce 0
systemctl enable php71-php-fpm --now
systemctl enable nginx --now
firewall-cmd --add-service=https --permanent

